{
  "openapi": "3.0.0",
  "info": {
    "title": "Transactions Analyzer - API",
    "version": "1.0.0",
    "contact": {
      "name": "Suporte a Desenvolvedores",
      "email": "luskcct@gmail.com"
    },
    "license": {
      "name": "Licença GPLv3",
      "url": "https://www.gnu.org/licenses/gpl-3.0.html"
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:5001"
    },
    {
      "url": "https://transactions-analyzer.herokuapp.com/"
    }
  ],
  "paths": {
    "/user/authentication": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Autentica um Usuário",
        "description": "Esta rota autentica um usuário através de seu user_name e user_password. Uma vez autenticado o usuário receberá um TOKEN JWT BEARER que deverá ser enviados no cabeçalho das requisições (Authorization)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthenticationPostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAuthenticationPostResponse"
                }
              }
            }
          },
          "401": {
            "description": "Requisitante não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          },
          "415": {
            "description": "Erro no JSON da requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Cria um Novo Usuário",
        "description": "Esta rota insere no banco SQL um usuário. Antes de inserir é verificado a existência do email ou username no banco para evitar duplicidade nos cadastros. Será gerada uma senha com 8 carácteres para este usuário e enviada automaticamente para o email informado.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBasicResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao tentar criar usuário",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          },
          "401": {
            "description": "Requisitante não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          },
          "415": {
            "description": "Erro no JSON da requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Retorna uma Lista de Usuários",
        "description": "Retorna todos os usuários do banco de dados com exeção do usuário administrador.",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBasicListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Requisitante não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Atualiza Dados do Usuário",
        "description": "Atualiza um registro de usuário no banco de dados através do seu ID que deverá ser informado dentro do dicionário com os outros dados que se deseja atualizar. Todos os campos do dicionário de entrada são obrogatórios, porém caso não deseje atualizar algum dos campos, este campos deve ser nulo. ATENÇÃO Esta rota não permite atualizar password ou token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBasicResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao tentar atualizar o usuário",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          },
          "401": {
            "description": "Requisitante não autenticado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          },
          "415": {
            "description": "Erro no JSON da requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Cria um Token de Troca de Senha.",
        "description": "Esta rota gera um token com 6 dígitos de forma aleatória e vincúla este token ao usuário informado. Este token deverá ser usado para resetar a senha do usuário. Ele é enviado de forma automática para o email de cadastro do usuário alvo. Esta rota possui um limite de 3 tentativas por 5 min. Ela retorna o user_id.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordPostRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao tentar criar token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          },
          "415": {
            "description": "Erro no JSON da requisição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResoponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserBasicResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "user_name": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "user_status": {
            "type": "integer"
          },
          "user_last_modification_user_id": {
            "type": "integer"
          }
        }
      },
      "UserBasicListResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserBasicResponse"
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "minimum": 1
          },
          "user_name": {
            "type": "string",
            "x-constraints": "Capitalized(required = true)",
            "minLength": 1,
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "x-constraints": "Capitalized(required = true)",
            "minLength": 1,
            "nullable": true
          },
          "user_status": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1,
            "nullable": true
          }
        },
        "required": [
          "user_id",
          "user_name",
          "user_email",
          "user_status"
        ]
      },
      "UserPostRequest": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "minLength": 1,
            "x-constraints": "Capitalized(required = true)"
          },
          "user_email": {
            "type": "string",
            "minLength": 1,
            "x-constraints": "Capitalized(required = true)"
          }
        },
        "required": [
          "user_name",
          "user_email"
        ]
      },
      "UserAuthenticationPostRequest": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "minLength": 1,
            "x-constraints": "Capitalized(required = true)"
          },
          "user_password": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "user_name",
          "user_password"
        ]
      },
      "UserAuthenticationPostResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ResetPasswordPostRequest": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "ResetPasswordPostResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer"
          }
        }
      },
      "ErrorResoponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}